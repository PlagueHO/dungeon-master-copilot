@using DMCopilot.Shared.Services
@using DMCopilot.Shared.Data
@using DMCopilot.Shared.Models

@inject IWorldRepository worldRepository
@inject NavigationManager navigationManager

<Card Background="Background.Info" WhiteText>
    <CardBody>
        <CardTitle Size="3">
            Your Worlds
        </CardTitle>
        <CardText>
            Select one of the existing worlds or create a new one by clicking Create. Generating a new world can take a few seconds and requires just a few words of input.
        </CardText>
    </CardBody>
</Card>

<Table FixedHeader FixedHeaderTableHeight="300px">
     <TableHeader>
         <TableRow>
             <TableHeaderCell>Name</TableHeaderCell>
             <TableHeaderCell>Description</TableHeaderCell>
             <TableHeaderCell>History</TableHeaderCell>
             <TableHeaderCell>Geography</TableHeaderCell>
         </TableRow>
     </TableHeader>
     <LoadingIndicator @bind-Visible="@loadingVisible">
        @if (worlds != null)
        {
            <TableBody>
                @foreach (var world in worlds)
                {
                    <TableRow @key="@world.Id">
                        <TableRowHeader>@world.Name</TableRowHeader>
                        <TableRowCell>@world.Description</TableRowCell>
                        <TableRowCell>@world.History</TableRowCell>
                        <TableRowCell>@world.Geography</TableRowCell>
                    </TableRow>
                }
            </TableBody>
        }
    </LoadingIndicator>
</Table>

@code {
    [CascadingParameter]
    public Account? Account { get; set; }

    [CascadingParameter]
    public Tenant? Tenant { get; set; }

    private bool loadingVisible = true;
    private IEnumerable<World> worlds { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await GetWorlds();
    }

    private async Task GetWorlds()
    {
        if (Tenant != null)
        {
            worlds = await worldRepository.GetWorldsByTenantAsync(Tenant.Id);
            loadingVisible = false;
        }
    }
}
